load("C:/Users/571986/Desktop/BAH/Genomic Sequence Manager/Visualization/GSM-App-8/.RData")
shiny::runApp('C:/Users/571986/Desktop/BAH/Genomic Sequence Manager/Visualization/GSM-App-8')
library(XML)
xml.url <- "ftp://ftp.fbo.gov/datagov/FBOFullXML.xml"
xmlfile <- xmlEventParse(xml.url)
install.packages(rjson)
?fromJSON
??fromJSON
help("install.packages")
install.packages(rjson)
install.packages(jsonlite)
help("install")
install.packages("rjson")
library("rjson")
json_file <- http://ec2-54-81-147-113.compute-1.amazonaws.com:8080/user-info?user_id=10
json_file <- "http://ec2-54-81-147-113.compute-1.amazonaws.com:8080/user-info?user_id=10"
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
json_data <- fromJSON(json_file, method="C", unexpected.escape = "error")
json_data <- fromJSON(json_file, method="C")
json_data <- fromJSON(json_file, method="C", unexpected.escape = "skip")
library(caret)
install.packages(c("caret", "kernlab"))
library(caret); library(kernlab); data(spam)
inTrain <- createDataPartition(y=spam$type, p=0.75, list=FALSE)
View(inTrain)
training <- spam[inTrain,]
testing <- spam[-inTrain,]
View(testing)
dim(training)
set.seed(32343)
modelFit <- train(type ~., data=training, method="glm")
modelFit <- train(type ~.,data=training, method="glm")
modelFit
modelFit <- train(type~.,data=training, method="glm")
modelFit$finalModel
library(caret); library(kernlab); data(spam)
inTrain <- createDataPartition(y=spam$type, p=0.75, list=FALSE)
training <- spam[inTrain,]
testing <- spam[-inTrain,]
dim(training)
set.seed(32343)
modelFit <- train(type~.,data=training, method="glm")
modelFit$finalModel
folds <- createFolds(y=spam$type k=10, list=TRUE, returnTrain=TRUE)
folds <- createFolds(y=spam$type, k=10, list=TRUE, returnTrain=TRUE)
sappl(folds, length)
sapply(folds, length)
folds[1]
folds[2]
args(trainControl)
set.seed(32343) #this ensures the same ransom numbers get generated each time you run the procedure
#so we can set an over seed or a seed for resampling
modelFit <- train(type~.,data=training, method="glm")
modelFit$finalModel
install.packages('caret', dependencies = TRUE)
install.packages("caret", dependencies = TRUE)
library(caret); library(kernlab); data(spam)
inTrain <- createDataPartition(y=spam$type, p=0.75, list=FALSE)
training <- spam[inTrain,]
testing <- spam[-inTrain,]
dim(training)
set.seed(32343) #this ensures the same ransom numbers get generated each time you run the procedure
#so we can set an over seed or a seed for resampling
modelFit <- train(type~.,data=training, method="glm")
modelFit$finalModel
pwd
setwd("~/GitHub/womenindatascience")
setwd("C:/Users/571986/Documents/GitHub/womenindatascience")
df = read.csv("tab9-2.csv")
View(df)
df = read.csv("tab9-2.csv")
View(df)
View(df)
df = df[,1-13]
View(df)
df = read.csv("tab9-2.csv")
df = df[,1-13]
View(df)
df = read.csv("tab9-2.csv")
View(df)
df = df[,-14]
View(df)
df = read.csv("tab9-2.csv")
df <- df[,1:13]
View(df)
row.names(df)
row.names(df) <- df[,1]
View(df)
View(df)
df = read.csv("tab9-2.csv")
df <- df[1:28,1:13]
View(df)
row.names(df) <- df[,1]
View(df)
df = read.csv("tab9-2.csv")
df <- as.data.frame(df[1:28,1:13])
View(df)
rownames(df) <- df[,1]
View(df)
setwd("C:/Users/571986/Documents/GitHub/womenindatascience")
df = read.csv("tab9-2.csv")
df <- as.data.frame(df[1:28,1:13])
rownames(df) <- df[,1]
View(df)
df <- df[-1,]
View(df)
df <- df[-1,]
View(df)
setwd("C:/Users/571986/Documents/GitHub/womenindatascience")
df = read.csv("tab9-2.csv")
df <- as.data.frame(df[1:28,1:13])
rownames(df) <- df[,1]
df <- df[,-1]
View(df)
matplot(df, type=c("b"),pch=1,col=1:4)
library(ggplot2)
library(reshape)
data <- data.frame(time = seq(0, 23), noob = rnorm(24), plus = runif(24), extra = rpois(24, lambda = 1))
Molten <- melt(data, id.vars = "time")
ggplot(Molten, aes(x = time, y = value, colour = variable)) + geom_line()
install.packages("reshape")
library(ggplot2)
library(reshape)
data <- data.frame(time = seq(0, 23), noob = rnorm(24), plus = runif(24), extra = rpois(24, lambda = 1))
Molten <- melt(data, id.vars = "time")
ggplot(Molten, aes(x = time, y = value, colour = variable)) + geom_line()
View(data)
View(df)
View(data)
data <- df
Molten <- melt(data, id.vars = "row.names")
ggplot(Molten, aes(x = time, y = value, colour = variable)) + geom_line()
data <- df
Molten <- melt(data, id.vars = "row.names")
ggplot(Molten, aes(x = time, y = value, colour = variable)) + geom_line()
setwd("C:/Users/571986/Documents/GitHub/womenindatascience")
df = read.csv("tab9-2.csv")
df <- as.data.frame(df[1:28,1:13])
rownames(df) <- df[,1]
df <- df[,-1]
library(ggplot2)
library(reshape)
data <- df
Molten <- melt(data, id.vars = "row.names")
ggplot(Molten, aes(x = time, y = value, colour = variable)) + geom_line()
df = read.csv("tab9-2.csv")
df <- as.data.frame(df[1:28,1:13])
View(df)
library(ggplot2)
library(reshape)
data <- df
Molten <- melt(data, id.vars = "Occupation")
ggplot(Molten, aes(x = time, y = value, colour = variable)) + geom_line()
View(df)
sapply(df, typeof)
sapply(df, typeof)
View(df)
summary(df)
class(df)
class(df[1,])
sapply(df, typeof)
data <- df
Molten <- melt(data, id.vars = "Occupation")
ggplot(Molten, aes(x = time, y = value, colour = variable)) + geom_line()
View(data)
View(Molten)
data <- data.frame(time = seq(0, 23), noob = rnorm(24), plus = runif(24), extra = rpois(24, lambda = 1))
View(data)
data <- data.frame(time = seq(0, 23), noob = rnorm(24), plus = runif(24), extra = rpois(24, lambda = 1))
plot(extra ~ time,
data = data,
type = "l",
ylim = c(min(data[ ,-1]), max(data[ ,-1])),
ylab = "value")
lines(data$time, data$plus, col = "steelblue")
lines(data$time, data$noob, col = "pink")
View(data)
Molten <- melt(data, id.vars = "Occupation")
data <- df
Molten <- melt(data, id.vars = "Occupation")
View(Molten)
data <- data.frame(time = seq(0, 23), noob = rnorm(24), plus = runif(24), extra = rpois(24, lambda = 1))
Molten <- melt(data, id.vars = "time")
View(Molten)
data <- df
Molten <- melt(data, id.vars = "Occupation")
ggplot(Molten, aes(x = time, y = value, colour = variable)) + geom_line()
df <- as.data.frame(df[1:28,1:13])
library(ggplot2)
library(reshape)
data <- df
Molten <- melt(data, id.vars = "Occupation")
ggplot(Molten, aes(x = time, y = value, colour = variable)) + geom_line()
setwd("C:/Users/571986/Documents/GitHub/womenindatascience")
df = read.csv("tab9-2.csv")
df <- as.data.frame(df[1:28,1:13])
library(ggplot2)
library(reshape)
data <- df
Molten <- melt(data, id.vars = "Occupation")
ggplot(Molten, aes(x = time, y = value, colour = variable)) + geom_line()
View(df)
setwd("C:/Users/571986/Documents/GitHub/womenindatascience")
df = read.csv("tab9-2.csv")
View(df)
df <- as.data.frame(df[1:24,1:13])
View(df)
library(ggplot2)
library(reshape)
data <- df
Molten <- melt(data, id.vars = "Occupation")
ggplot(Molten, aes(x = time, y = value, colour = variable)) + geom_line()
View(df)
View(Molten)
View(Molten)
library(ggplot2)
library(reshape)
data <- data.frame(time = seq(0, 23), noob = rnorm(24), plus = runif(24), extra = rpois(24, lambda = 1))
Molten <- melt(data, id.vars = "time")
ggplot(Molten, aes(x = time, y = value, colour = variable)) + geom_line()
data <- data.frame(time = seq(0, 23), noob = rnorm(24), plus = runif(24), extra = rpois(24, lambda = 1))
plot(extra ~ time,
data = data,
type = "l",
ylim = c(min(data[ ,-1]), max(data[ ,-1])),
ylab = "value")
lines(data$time, data$plus, col = "steelblue")
lines(data$time, data$noob, col = "pink")
View(data)
